version: 0.2

env:
  variables:
    COMPONENT_NAME: com.devangkubde.irisml
    REGION: ap-south-1

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - echo "Installing AWS CLI..."
      - pip install awscli

  pre_build:
    commands:
      - echo "Getting Docker credentials from SSM..."
      - DOCKER_USER=$(aws ssm get-parameter --name /gg/dockeruser --query 'Parameter.Value' --output text)
      - DOCKER_PASSWORD=$(aws ssm get-parameter --name DOCKER_PASS --with-decryption --query 'Parameter.Value' --output text)
      - echo "Logging in to Docker Hub..."
      - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - echo "Setting up Docker buildx..."
      - docker buildx create --use || true
      - docker buildx inspect --bootstrap

  build:
    commands:
      - export COMPONENT_VER=1.0.$CODEBUILD_BUILD_NUMBER
      - echo "Building Docker image for ARM and pushing to Docker Hub..."
      - docker buildx build --platform linux/arm/v7 -t $DOCKER_USER/iris-ml:$COMPONENT_VER --push .
      - echo "Docker image pushed as $DOCKER_USER/iris-ml:$COMPONENT_VER"

  post_build:
    commands:
      - echo "Getting Greengrass core info from SSM..."
      - ACCOUNT_ID=$(aws ssm get-parameter --name /gg/accountid --query 'Parameter.Value' --output text)
      - CORE_THING_NAME=$(aws ssm get-parameter --name /gg/corethingname --query 'Parameter.Value' --output text)

      - echo "Creating Greengrass component recipe..."
      - |
        cat > recipe.yaml <<EOF
        ---
        RecipeFormatVersion: '2020-01-25'
        ComponentName: ${COMPONENT_NAME}
        ComponentVersion: ${COMPONENT_VER}
        ComponentType: aws.greengrass.generic
        ComponentDescription: ML Iris model docker container
        ComponentPublisher: Devang Kubde
        Manifests:
          - Platform:
              os: linux
              architecture: armv7l
            Lifecycle:
              Run: docker run --rm $DOCKER_USER/iris-ml:${COMPONENT_VER}
        EOF

      - echo "Publishing component to Greengrass..."
      - aws greengrassv2 create-component-version --inline-recipe fileb://recipe.yaml --region $REGION

      - echo "Deploying component to Raspberry Pi..."
      - |
        aws greengrassv2 create-deployment \
          --target-arn arn:aws:iot:$REGION:$ACCOUNT_ID:thing/$CORE_THING_NAME \
          --components "{\\"$COMPONENT_NAME\\": {\\"componentVersion\\": \\"$COMPONENT_VER\\"}}" \
          --deployment-policies failureHandlingPolicy=ROLLBACK \
          --region $REGION

artifacts:
  files:
    - '**/*'



