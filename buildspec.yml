version: 0.2

env:
  variables:
    COMPONENT_NAME: com.devangkubde.irisml
    REGION: ap-south-1

phases:
  install:
    runtime-versions:
      python: 3.8
    commands:
      - echo "Installing AWS CLI..."
      - pip install awscli

  pre_build:
    commands:
      - echo "Getting Docker credentials from SSM..."
      - DOCKER_USER=$(aws ssm get-parameter --name /gg/dockeruser --query 'Parameter.Value' --output text)
      - DOCKER_PASSWORD=$(aws ssm get-parameter --name DOCKER_PASS --with-decryption --query 'Parameter.Value' --output text)
      - echo "Logging in to Docker Hub..."
      - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      - echo "Setting up Docker buildx..."
      - docker buildx create --use || true
      - docker buildx inspect --bootstrap

    build:
    commands:
      - echo "🔧 Installing QEMU emulators for ARM..."
      - docker run --rm --privileged tonistiigi/binfmt --install all

      - echo "📦 Setting component version..."
      - COMPONENT_VER=latest
      - IMAGE_NAME=$DOCKER_USER/iris-ml:$COMPONENT_VER

      - echo "🐳 Building Docker image for ARM (tag: $IMAGE_NAME)"
      - docker buildx create --use || true
      - docker buildx inspect --bootstrap

      - docker buildx build \
          --platform linux/arm/v7 \
          --tag $IMAGE_NAME \
          --push .



    post_build:
    commands:
      - echo "Getting Greengrass core info from SSM..."
      - ACCOUNT_ID=$(aws ssm get-parameter --name /gg/accountid --query 'Parameter.Value' --output text)
      - CORE_THING_NAME=$(aws ssm get-parameter --name /gg/corethingname --query 'Parameter.Value' --output text)
      - COMPONENT_VER=1.0.$CODEBUILD_BUILD_NUMBER
      - COMPONENT_NAME=com.devangkubde.irisml
      - IMAGE_TAG=$DOCKER_USER/iris-ml:$COMPONENT_VER

      - echo "Generating valid recipe.yaml..."
      - |
        echo "\
        RecipeFormatVersion: '2020-01-25'
        ComponentName: $COMPONENT_NAME
        ComponentVersion: $COMPONENT_VER
        ComponentType: aws.greengrass.generic
        ComponentDescription: ML Iris model docker container
        ComponentPublisher: Devang Kubde
        Manifests:
          - Platform:
              os: linux
              architecture: armv7l
            Lifecycle:
              Run: docker run --rm $IMAGE_TAG
        " > recipe.yaml

      - echo "Publishing component to Greengrass..."
      - aws greengrassv2 create-component-version --inline-recipe fileb://recipe.yaml --region $REGION

      - echo "Deploying component to Raspberry Pi..."
      - |
        COMPONENTS_JSON="{\"$COMPONENT_NAME\": {\"componentVersion\": \"$COMPONENT_VER\"}}"
        aws greengrassv2 create-deployment \
          --target-arn arn:aws:iot:$REGION:$ACCOUNT_ID:thing/$CORE_THING_NAME \
          --components "$COMPONENTS_JSON" \
          --deployment-policies failureHandlingPolicy=ROLLBACK \
          --region $REGION






